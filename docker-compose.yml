services:
  # Milvus standalone with embedded etcd and local storage
  milvus:
    container_name: milvus-docker-rag
    image: milvusdb/milvus:v2.5.5
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      - ETCD_USE_EMBED=true
      - ETCD_DATA_DIR=/var/lib/milvus/etcd
      - ETCD_CONFIG_PATH=/milvus/configs/embedEtcd.yaml
      - COMMON_STORAGETYPE=local
      - LD_PRELOAD=/milvus/lib/libjemalloc.so
      - LD_LIBRARY_PATH=/milvus/lib:/usr/lib
      - MALLOC_CONF=background_thread:true
      - DEPLOY_MODE=STANDALONE
      - LOG_LEVEL=debug
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    networks:
      - temporal-network

  # Your existing Temporal services
  elasticsearch:
    container_name: temporal-elasticsearch-docker-rag
    environment:
      - cluster.routing.allocation.disk.threshold_enabled=true
      - cluster.routing.allocation.disk.watermark.low=512mb
      - cluster.routing.allocation.disk.watermark.high=256mb
      - cluster.routing.allocation.disk.watermark.flood_stage=128mb
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
    image: elasticsearch:7.17.27
    networks:
      - temporal-network
    expose:
      - 9200
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

  postgresql:
    container_name: temporal-postgresql-docker-rag
    environment:
      POSTGRES_PASSWORD: temporal
      POSTGRES_USER: temporal
    image: postgres:16
    networks:
      - temporal-network
    expose:
      - 5432
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  temporal:
    container_name: temporal-docker-rag
    depends_on:
      - postgresql
      - elasticsearch
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development-sql.yaml
      - ENABLE_ES=true
      - ES_SEEDS=elasticsearch
      - ES_VERSION=v7
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/auto-setup:1.27.2
    networks:
      - temporal-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig

  temporal-admin-tools:
    container_name: temporal-admin-tools-docker-rag
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    image: temporalio/admin-tools:1.27.2-tctl-1.18.2-cli-1.3.0
    networks:
      - temporal-network
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui-docker-rag
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.34.0
    networks:
      - temporal-network
    ports:
      - 8080:8080

  worker:
    container_name: temporal-rag-worker
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - TEMPORAL_HOST=${TEMPORAL_HOST}
      - MILVUS_HOST=${MILVUS_HOST}
      - COLLECTION_NAME=${COLLECTION_NAME}
      - DB_NAME=${DB_NAME}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - EMBEDDING_ENDPOINT=${EMBEDDING_ENDPOINT}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
    depends_on:
      - temporal
      - milvus
    networks:
      - temporal-network

volumes:
  milvus_data:
  elasticsearch_data:
  postgresql_data:
  temporal-data:

networks:
  temporal-network:
    driver: bridge
    name: temporal-network